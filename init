#!/bin/bash

######COLORS######
BLUE="\e[34m"
CYAN="\e[36m"
GREEN="\e[32m"
PINK="\e[35m"
RED="\e[31m"

RESET="\e[0m"

BOLD="\e[1m"
UNDERLINE="\e[4m"
##################

INFO=${CYAN}[INFO]${RESET}
ERROR=${RED}[ERROR]${RESET}

bin_dir=bin
app_name=croco

detect_distro() {
	if command -v dpkg-query &> /dev/null; then
		echo "debian"
	elif command -v rpm &> /dev/null; then
		echo "rpm"
	elif command -v pacman &> /dev/null; then
		echo "arch"
	elif command -v dnf &> /dev/null; then
		echo "fedora"
	else
		echo "UNSUPPORTED"
	fi
}

check_package_installed() {
	local distro="$1"
	local package="$2"

	case "$distro" in 
		debian)
			dpkg-query -W -f='${Status}' "$package" 2> /dev/null | grep -c "ok installed"
			;;
		rpm)
			rpm -q "$package" &> /dev/null
			;;
		arch)
			pacman -Q "$package" &> /dev/null
			;;
		fedora)
			dnf list installed "$package" &> /dev/null
			;;
		*)
			echo -e "${ERROR} ${RED}Unsupported package manager${RESET}"
			exit 1
			;;
	esac
}

install_packages() {
	local distro="$1"
	shift
	local packages=("$@")

	case "$distro" in 
		debian)
			sudo apt-get update
			sudo apt-get install -y "${packages[@]}"
			;;
		rpm)
			sudo yum install -y "${packages[@]}"
			;;
		arch)
			sudo pacman -S --needed "${packages[@]}"
			;;
		*)
			echo -e "${ERROR} ${RED}Unsupported package manager${RESET}"
			exit 1
			;;
	esac
}

distro=$(detect_distro)
if [ "$distro" == "UNSUPPORTED" ]; then
	echo -e "${ERROR}${RED}Usupported os${RESET}"
	exit 1
else 
	echo -e "${INFO} Detected os: ${PINK}${UNDERLINE}${distro}${RESET}"
fi

if [ -d "$bin_dir" ]; then
	echo -e "${INFO} Project bin directory exists"
else 
	echo -e "${INFO} Project bin directory does not exist. Creating it..."
	mkdir $bin_dir
	echo -e "${GREEN}[CREATED] Project bin directory created.${RESET}"
fi

required_packages=("ncurses" "make" "cmake") # arch
if [ "$distro" == "debian" ]; then
	required_packages=("libncursesw5-dev" "make" "cmake")
elif [ "$distro" == "rpm" ]; then
	required_packages=("ncurses" "make" "cmake")
elif [ "$distro" == "fedora" ]; then
	required_packages=("ncurses" "make" "cmake")
fi
missing_packages=()
for package in "${required_packages[@]}"; do
	if check_package_installed "$distro" "$package"; then
		echo -e "${INFO} Package ${PINK}${UNDERLINE}$package${RESET} is already installed"
	else
		echo -e "${ERROR} Package ${PINK}${UNDERLINE}$package${RESET} is missing"
		missing_packages+=("$package")
	fi
done

if [ ${#missing_packages[@]} -ne 0 ]; then
	echo -e "${INFO} There are some missing packages. Would you like to install them (y/N): " 
	read ans
	case $ans in
		[yY])
			echo -e "${INFO} ${BLUE}Installing missing packages: ${packages[*]}${RESET}"
			install_packages "$distro" "${missing_packages[@]}"
			;;

		[nN])
			echo -e "${INFO} Could not proceed installation. Aborting..."
			exit 1
			;;
		*)
			echo -e "ddd"
			;;
	esac
else
	echo -e "${INFO} ${GREEN}${BOLD}All required_packages are already installed${RESET}"
fi

echo "Choose your build system:"
echo "1) Make"
echo "2) Cmake"
read -p "Enter your choice (default=1): " ans

ans=${ans:-1}

if [[ "$ans" == "1" ]]; then
	echo -e "${INFO} Making the project with make"
	make
	echo -e "${GREEN}[CREATED] Project is made (with make)${RESET}"
elif [[ "$ans" == "2" ]]; then
	echo -e "${INFO} Making the project with make"
	mkdir -p build && cd build
	cmake ..
	make
	bin_dir="."
	echo -e "${GREEN}[CREATED] Project is made (with cmake)${RESET}"
else
	echo "Invalid choice"
fi

attempts=0
max_attempts=3
while ((attempts < max_attempts)); do
	read -p "Do you want to add croco to your /bin/ directory (y/N): " ans
	case $ans in
		[yY])
			sudo cp "$bin_dir/$app_name" /usr/bin/
			break
			;;

		[nN])
			break
			;;

		*)
			echo -e "${RED}[ERROR]${RESET} ${RED}Invalid input. Please try again${RESET}"
			;;
	esac

	((++attempts))
done

if ((attempts == max_attempts)); then
	echo -e "${RED}[ERROR]${RESET} ${RED}${BOLD}Wrong inputs: 3. Aborting...${RESET}"
	exit 1
fi

echo -e "${INFO} Installation completed"



